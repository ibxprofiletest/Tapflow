"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5100],{25731:(n,e,t)=>{t.d(e,{q:()=>d,z:()=>o});var r=t(87017),u=t(79971),i=t(96061);t(49509);let a=(0,u.getCookie)("session_id"),o=new i.l4("https://api.tapflow.co/graphql",{headers:{authorization:a?"Bearer ".concat(a):""}}),d=new r.E({defaultOptions:{queries:{refetchOnWindowFocus:!1,refetchOnMount:!1,retry:!1}}})},55100:(n,e,t)=>{t.d(e,{Ay:()=>g,w4:()=>p,XN:()=>c});var r=t(63416),u=t(26715),i=t(25731),a=t(12115),o=t(79971);let d=n=>{n&&(i.z.setHeader("authorization","Bearer ".concat(n)),(0,o.setCookie)("session_id",n,{maxAge:12096e5,path:"/"}))},s=["Ping"],c=()=>{let n=(0,u.jE)();return e=>{var t;(null==e||null==(t=e.session)?void 0:t.token)&&d(e.session.token),n.setQueryData(s,n=>{var t;return{...n,ping:{...null==n?void 0:n.ping,...e,user:{...null==n||null==(t=n.ping)?void 0:t.user,...null==e?void 0:e.user}}}})}},p=()=>{let[n]=(0,a.useState)(()=>{let n=(0,o.getCookie)("session_id");return console.log("cookieToken",n),n&&i.z.setHeader("authorization","Bearer ".concat(n)),i.z}),e=(0,r.Gm)(n,void 0,{queryKey:s,retry:!1});return(0,a.useEffect)(()=>{e.isError&&(console.log("Ping error",e.error),i.z.setHeader("authorization",""),(0,o.deleteCookie)("session_id"))},[e.isError]),null};function g(n,e,t){var u,a,o,d;let c=(0,r.Gm)(i.z,n,{queryKey:s,retry:!1,enabled:!1,...e},t);return{...c,authUser:null==(a=c.data)||null==(u=a.ping)?void 0:u.user,authenticated:!!(null==(d=c.data)||null==(o=d.ping)?void 0:o.user)}}},63416:(n,e,t)=>{t.d(e,{$we:()=>na,Bnh:()=>np,Cti:()=>nA,DOm:()=>nB,ESR:()=>nn,FWH:()=>nZ,GUA:()=>o,Gm:()=>W,H7G:()=>H,Hr_:()=>T,IEv:()=>n0,K42:()=>n9,Kco:()=>nx,LbZ:()=>nF,NHn:()=>nt,NII:()=>nW,NRT:()=>nQ,P1I:()=>Z,P5t:()=>p,Q$T:()=>nk,QO:()=>nm,Qed:()=>nE,RvN:()=>nR,TBb:()=>nT,TVA:()=>L,Wfn:()=>C,Y46:()=>K,YWh:()=>er,Zcv:()=>ne,Zqq:()=>X,_3r:()=>N,_AN:()=>nC,_OY:()=>l,_Zk:()=>nP,aoR:()=>Y,aqY:()=>ni,arz:()=>a,ay_:()=>G,cg:()=>et,dm2:()=>ns,dvG:()=>x,eYo:()=>nX,f3b:()=>nj,fJ_:()=>R,fyZ:()=>eu,g90:()=>nL,gG1:()=>g,gbX:()=>M,hJd:()=>n8,hxU:()=>f,jjZ:()=>nr,kIU:()=>nY,l08:()=>n2,mLN:()=>nv,mYw:()=>s,oKJ:()=>q,ow0:()=>n6,p7P:()=>A,pRG:()=>V,sUM:()=>nK,sYX:()=>no,tAq:()=>nV,uih:()=>n$,vM$:()=>n5,vO:()=>nq,vbA:()=>D,vf9:()=>J,wdY:()=>ny,x4e:()=>ee,xGv:()=>w,xLl:()=>d,yAC:()=>nw,yVs:()=>c,zWs:()=>nG,zyk:()=>nl});var r=t(5041),u=t(32960);function i(n,e,t,r){return async()=>n.request({document:e,variables:t,requestHeaders:r})}var a=function(n){return n.Monthly="monthly",n.Yearly="yearly",n}({}),o=function(n){return n.Free="free",n.Paid="paid",n}({}),d=function(n){return n.Error="error",n.Pending="pending",n.Ready="ready",n.Transcoding="transcoding",n.Uploading="uploading",n}({}),s=function(n){return n.Embed="embed",n.Image="image",n.Video="video",n}({}),c=function(n){return n.OnlyWhoPay="onlyWhoPay",n.OnlyWhoTip="onlyWhoTip",n.Public="public",n}({}),p=function(n){return n.Active="active",n.InProgress="inProgress",n.Inactive="inactive",n.Pending="pending",n}({}),g=function(n){return n.Author="author",n.Reader="reader",n}({}),l=function(n){return n.Activated="ACTIVATED",n.Approved="APPROVED",n.Pending="PENDING",n.Rejected="REJECTED",n.Subscribed="SUBSCRIBED",n}({});let m="\n    fragment GettingStartedFragment on GettingStarted {\n  hasProductCreated\n  hasContentAdded\n  hasTiersUpdated\n  hasLaunchPageUpdated\n  hasProductPublished\n}\n    ",P="\n    fragment UserFragment on User {\n  id\n  isMe\n  email\n  username\n  name\n  url\n  role\n  bio\n  avatarUrl\n  socialLinks {\n    type\n    url\n  }\n  seoPictureUrl\n  mainCurrency\n  isPartner\n  accessExperimentalFeatures\n  plan {\n    ...AuthorSubscriptionFragment\n  }\n  gettingStarted {\n    ...GettingStartedFragment\n  }\n  hasVisitedGuide\n  status\n  userType\n  isEmailApproved\n  hasPassword\n  isWaitListFormSubmitted\n  promocode {\n    id\n    name\n    code\n  }\n  invite {\n    id\n    code\n    owner {\n      id\n      name\n      username\n    }\n  }\n  onboarding {\n    hasIntroSeen\n    isDisplayNameSet\n    isUsernameSet\n  }\n  createdAt\n  updatedAt\n  lastSentEmailVerificationAt\n}\n    ".concat("\n    fragment AuthorSubscriptionFragment on AuthorSubscription {\n  id\n  name\n  type\n  icon\n  frequency\n  features {\n    icon\n    title\n  }\n  nextPaymentAt\n  trialExpiresAt\n}\n    ","\n").concat(m),h="\n    fragment UserSessionFragment on UserSession {\n  session {\n    token\n    expiresAt\n  }\n  user {\n    ...UserFragment\n  }\n  isNewCustomer\n}\n    ".concat(P),y="\n    fragment LandingFragment on Landing {\n  id\n  title\n  subtitle\n  tiersHeader\n  content\n  media {\n    type\n    provider\n    src\n    isFullSize\n    videoId\n    coverUrl\n    status\n  }\n}\n    ",I="\n    fragment PageInListFragment on Page {\n  id\n  title\n  description\n  icon\n  orderNumber\n  url\n  pictureUrl\n  scheduledPublishAt\n  isScheduledPublishWithNotification\n  isPublished\n  publishedAt\n  isMyPage\n  isPurchased\n  hasChanges\n  userHasAccess\n  hasPublicTier\n  hasPaidTier\n  isIncludedInActiveTiers\n  isCompleted\n  isPageNewToRead\n  path\n  createdAt\n  updatedAt\n  subPages {\n    ...SubPageInListFragment\n  }\n}\n    ".concat("\n    fragment SubPageInListFragment on Page {\n  id\n  title\n  description\n  icon\n  orderNumber\n  url\n  pictureUrl\n  scheduledPublishAt\n  isScheduledPublishWithNotification\n  isPublished\n  publishedAt\n  isMyPage\n  isPurchased\n  hasChanges\n  userHasAccess\n  hasPublicTier\n  hasPaidTier\n  isIncludedInActiveTiers\n  isCompleted\n  isPageNewToRead\n  path\n  createdAt\n  updatedAt\n}\n    "),F="\n    fragment PageFragment on Page {\n  ...PageInListFragment\n  content\n}\n    ".concat(I),b="\n    fragment ProductFolderFragment on ProductFolder {\n  title\n  slugName\n  id\n}\n    ",$="\n    fragment ProductFragment on Product {\n  id\n  slug\n  url\n  title\n  description\n  pictureUrl\n  chatWidget\n  userHasAccess\n  hasChanges\n  hasPublicTier\n  hasPaidTier\n  hasTiersBeenUpdated\n  hasLandingBeenUpdated\n  isPublished\n  isPurchased\n  isScheduledPublishWithNotification\n  isMyProduct\n  pageCount\n  tierCount\n  lowestPriceInCents\n  lowestPriceCurrency\n  lowestPriceId\n  mainCurrency\n  createdAt\n  updatedAt\n  publishedAt\n  scheduledPublishAt\n  author {\n    ...UserFragment\n  }\n  productFolder {\n    ...ProductFolderFragment\n  }\n}\n    ".concat(P,"\n").concat(b),S="\n    fragment TierFragment on Tier {\n  id\n  slugName\n  orderNumber\n  title\n  description\n  pictureUrl\n  access\n  isEnabled\n  priceInCents\n  currency\n  isCurrent\n  pageCount\n  pages {\n    pageId\n    title\n    icon\n    isIncluded\n    orderNumber\n    description\n  }\n  appliedPromocode {\n    title\n    code\n    discountInCents\n    priceInCents\n  }\n}\n    ",q=(n,e,t)=>(0,r.n)({mutationKey:["ApproveEmailOwnershipWithCode"],mutationFn:e=>i(n,"\n    mutation ApproveEmailOwnershipWithCode($email: String!) {\n  approveEmailOwnershipWithCode(email: $email)\n}\n    ",e,t)(),...e}),U="\n    mutation ConfirmEmailChange($code: String!) {\n  confirmEmailChange(code: $code) {\n    ...UserFragment\n  }\n}\n    ".concat(P),A=(n,e,t)=>(0,r.n)({mutationKey:["ConfirmEmailChange"],mutationFn:e=>i(n,U,e,t)(),...e}),G=(n,e,t)=>(0,r.n)({mutationKey:["ConnectStripe"],mutationFn:e=>i(n,"\n    mutation ConnectStripe($input: connectStripeInput!) {\n  connectStripe(input: $input) {\n    redirectUrl\n  }\n}\n    ",e,t)(),...e}),C=(n,e,t)=>(0,r.n)({mutationKey:["ContinueStripeOnboarding"],mutationFn:e=>i(n,"\n    mutation ContinueStripeOnboarding($input: continueStripeOnboardingInput!) {\n  continueStripeOnboarding(input: $input) {\n    redirectUrl\n  }\n}\n    ",e,t)(),...e}),v="\n    query GetAuthorSubscriptionPlans {\n  getAuthorSubscriptionPlans {\n    ...AuthorSubscriptionPlanFragment\n  }\n}\n    ".concat("\n    fragment AuthorSubscriptionPlanFragment on AuthorSubscriptionPlan {\n  id\n  name\n  description\n  currency\n  icon\n  type\n  features {\n    icon\n    title\n  }\n  monthly\n  yearly\n  platformCommissionMonthly\n  platformCommissionYearly\n  promocode {\n    id\n    name\n    code\n  }\n}\n    "),K=(n,e,t,r)=>(0,u.I)({queryKey:void 0===e?["GetAuthorSubscriptionPlans"]:["GetAuthorSubscriptionPlans",e],queryFn:i(n,v,e,r),...t}),f=(n,e,t,r)=>(0,u.I)({queryKey:["GetInviteByCode",e],queryFn:i(n,"\n    query GetInviteByCode($code: String!) {\n  getInviteByCode(code: $code) {\n    id\n    code\n    owner {\n      id\n      name\n      username\n    }\n  }\n}\n    ",e,r),...t}),T=(n,e,t)=>(0,r.n)({mutationKey:["GoToStripeDashboard"],mutationFn:e=>i(n,"\n    mutation GoToStripeDashboard {\n  goToStripeDashboard {\n    redirectUrl\n  }\n}\n    ",e,t)(),...e}),D=(n,e,t)=>(0,r.n)({mutationKey:["LogOut"],mutationFn:e=>i(n,"\n    mutation LogOut {\n  logOut\n}\n    ",e,t)(),...e}),L=(n,e,t)=>(0,r.n)({mutationKey:["LoginWithEmailCode"],mutationFn:e=>i(n,"\n    mutation LoginWithEmailCode($input: loginWithEmailCodeInput!) {\n  loginWithEmailCode(input: $input)\n}\n    ",e,t)(),...e}),E="\n    mutation LoginWithGoogle($input: loginWithGoogleInput!) {\n  loginWithGoogle(input: $input) {\n    ...UserSessionFragment\n  }\n}\n    ".concat(h),w=(n,e,t)=>(0,r.n)({mutationKey:["LoginWithGoogle"],mutationFn:e=>i(n,E,e,t)(),...e}),N=(n,e,t)=>(0,r.n)({mutationKey:["ManageAuthorSubscription"],mutationFn:e=>i(n,"\n    mutation ManageAuthorSubscription {\n  manageAuthorSubscription {\n    redirectUrl\n  }\n}\n    ",e,t)(),...e}),k="\n    query Ping {\n  ping {\n    session {\n      token\n      expiresAt\n    }\n    user {\n      ...UserFragment\n    }\n  }\n}\n    ".concat(P),W=(n,e,t,r)=>(0,u.I)({queryKey:void 0===e?["Ping"]:["Ping",e],queryFn:i(n,k,e,r),...t}),O="\n    mutation PurchaseProduct($input: purchaseInput!) {\n  purchase(input: $input) {\n    user {\n      ...UserFragment\n    }\n    session {\n      token\n      expiresAt\n    }\n    isNewCustomer\n    wasAuthorized\n    checkoutUrl\n  }\n}\n    ".concat(P),R=(n,e,t)=>(0,r.n)({mutationKey:["PurchaseProduct"],mutationFn:e=>i(n,O,e,t)(),...e}),z="\n    mutation PurchaseForFreeTier($input: purchaseInput!) {\n  purchaseForFreeTier(input: $input) {\n    user {\n      ...UserFragment\n    }\n    session {\n      token\n      expiresAt\n    }\n    isNewCustomer\n    wasAuthorized\n    checkoutUrl\n  }\n}\n    ".concat(P),V=(n,e,t)=>(0,r.n)({mutationKey:["PurchaseForFreeTier"],mutationFn:e=>i(n,z,e,t)(),...e}),_="\n    mutation PurchaseUpgradeProduct($input: purchaseInput!) {\n  purchaseUpgrade(input: $input) {\n    user {\n      ...UserFragment\n    }\n    session {\n      token\n      expiresAt\n    }\n    isNewCustomer\n    wasAuthorized\n    checkoutUrl\n  }\n}\n    ".concat(P),x=(n,e,t)=>(0,r.n)({mutationKey:["PurchaseUpgradeProduct"],mutationFn:e=>i(n,_,e,t)(),...e}),M=(n,e,t,r)=>(0,u.I)({queryKey:void 0===e?["StripeSettings"]:["StripeSettings",e],queryFn:i(n,"\n    query StripeSettings {\n  getUserSettings {\n    stripeAccountStatus\n    stripeAccountStatusDescription\n    acceptingPayments\n    acceptingPaymentsStartedAt\n    payoutsEnabled\n    payoutsEnabledStartedAt\n    stripeVerifiedAt\n    timezone\n  }\n}\n    ",e,r),...t}),B="\n    mutation UpdateUser($input: updateUserInput!) {\n  updateUser(input: $input) {\n    ...UserFragment\n  }\n}\n    ".concat(P),H=(n,e,t)=>(0,r.n)({mutationKey:["UpdateUser"],mutationFn:e=>i(n,B,e,t)(),...e}),Y=(n,e,t)=>(0,r.n)({mutationKey:["UpdateUserOnboarding"],mutationFn:e=>i(n,"\n    mutation UpdateUserOnboarding($input: updateUserOnboardingInput!) {\n  updateUserOnboarding(input: $input) {\n    hasIntroSeen\n    isDisplayNameSet\n    isUsernameSet\n  }\n}\n    ",e,t)(),...e}),Z=(n,e,t)=>(0,r.n)({mutationKey:["UpgradeAuthorSubscription"],mutationFn:e=>i(n,"\n    mutation UpgradeAuthorSubscription($input: upgradeAuthorSubscriptionInput!) {\n  upgradeAuthorSubscription(input: $input) {\n    checkoutUrl\n  }\n}\n    ",e,t)(),...e}),j="\n    query GetUser($username: String!) {\n  getUser(username: $username) {\n    ...UserFragment\n  }\n}\n    ".concat(P),J=(n,e,t,r)=>(0,u.I)({queryKey:["GetUser",e],queryFn:i(n,j,e,r),...t}),Q="\n    mutation VerifyEmailCode($input: verifyEmailCodeInput!) {\n  verifyEmailCode(input: $input) {\n    ...UserSessionFragment\n  }\n}\n    ".concat(h),X=(n,e,t)=>(0,r.n)({mutationKey:["VerifyEmailCode"],mutationFn:e=>i(n,Q,e,t)(),...e}),nn=(n,e,t,r)=>(0,u.I)({queryKey:["GetAudience",e],queryFn:i(n,"\n    query GetAudience($productId: ID!) {\n  getAudience(productId: $productId) {\n    id\n    customer {\n      id\n      name\n      username\n      email\n      avatarUrl\n    }\n    tier {\n      id\n      title\n      orderNumber\n    }\n    progress\n    joinedAt\n  }\n}\n    ",e,r),...t}),ne=(n,e,t,r)=>(0,u.I)({queryKey:void 0===e?["GetProductsStats"]:["GetProductsStats",e],queryFn:i(n,"\n    query GetProductsStats($productId: ID) {\n  getProductsStats(productId: $productId) {\n    productId\n    stats {\n      revenue\n      sales\n      views\n      courseCompletions\n    }\n  }\n}\n    ",e,r),...t}),nt=(n,e,t,r)=>(0,u.I)({queryKey:void 0===e?["GetTotalStats"]:["GetTotalStats",e],queryFn:i(n,"\n    query GetTotalStats {\n  getTotalStats {\n    revenue\n    sales\n    views\n    courseCompletions\n  }\n}\n    ",e,r),...t}),nr=(n,e,t,r)=>(0,u.I)({queryKey:["GetTierStats",e],queryFn:i(n,"\n    query GetTierStats($productId: ID!) {\n  getTierStats(productId: $productId) {\n    tierId\n    stats {\n      views\n      sales\n      revenue\n      courseCompletions\n      progress\n    }\n  }\n}\n    ",e,r),...t}),nu="\n    query GetProductManagement($productId: ID!) {\n  getProduct(id: $productId) {\n    ...ProductFragment\n  }\n  getPages(productId: $productId) {\n    ...PageInListFragment\n  }\n  getTiers(productId: $productId) {\n    ...TierFragment\n  }\n  getLanding(productId: $productId) {\n    ...LandingFragment\n  }\n}\n    ".concat($,"\n").concat(I,"\n").concat(S,"\n").concat(y),ni=(n,e,t,r)=>(0,u.I)({queryKey:["GetProductManagement",e],queryFn:i(n,nu,e,r),...t}),na=(n,e,t)=>(0,r.n)({mutationKey:["AddDefaultProducts"],mutationFn:e=>i(n,"\n    mutation AddDefaultProducts {\n  addDefaultProducts {\n    redirectUrl\n  }\n}\n    ",e,t)(),...e}),no=(n,e,t,r)=>(0,u.I)({queryKey:["GetCustomVideo",e],queryFn:i(n,"\n    query GetCustomVideo($guid: ID!) {\n  getCustomVideo(guid: $guid) {\n    id\n    guid\n    status\n    transcodingProgress\n  }\n}\n    ",e,r),...t}),nd="\n    query GetLanding($getLandingProductId: ID!) {\n  getLanding(productId: $getLandingProductId) {\n    ...LandingFragment\n  }\n}\n    ".concat(y),ns=(n,e,t,r)=>(0,u.I)({queryKey:["GetLanding",e],queryFn:i(n,nd,e,r),...t}),nc="\n    query GetPublishedLanding($getPublishedLandingProductId: ID!) {\n  getPublishedLanding(productId: $getPublishedLandingProductId) {\n    ...LandingFragment\n  }\n}\n    ".concat(y),np=(n,e,t,r)=>(0,u.I)({queryKey:["GetPublishedLanding",e],queryFn:i(n,nc,e,r),...t}),ng="\n    mutation UpdateLanding($input: updateLandingInput!) {\n  updateLanding(input: $input) {\n    ...LandingFragment\n  }\n}\n    ".concat(y),nl=(n,e,t)=>(0,r.n)({mutationKey:["UpdateLanding"],mutationFn:e=>i(n,ng,e,t)(),...e}),nm=(n,e,t)=>(0,r.n)({mutationKey:["ArchivePage"],mutationFn:e=>i(n,"\n    mutation ArchivePage($archivePageId: ID!) {\n  archivePage(id: $archivePageId)\n}\n    ",e,t)(),...e}),nP=(n,e,t)=>(0,r.n)({mutationKey:["CancelScheduledPagePublish"],mutationFn:e=>i(n,"\n    mutation CancelScheduledPagePublish($id: ID!) {\n  cancelScheduledPagePublish(id: $id)\n}\n    ",e,t)(),...e}),nh="\n    mutation CreatePage($input: addPageInput!) {\n  addPage(input: $input) {\n    ...PageFragment\n  }\n}\n    ".concat(F),ny=(n,e,t)=>(0,r.n)({mutationKey:["CreatePage"],mutationFn:e=>i(n,nh,e,t)(),...e}),nI="\n    query GetPage($getPageId: ID!) {\n  getPage(id: $getPageId) {\n    ...PageFragment\n    isPurchased\n  }\n}\n    ".concat(F),nF=(n,e,t,r)=>(0,u.I)({queryKey:["GetPage",e],queryFn:i(n,nI,e,r),...t}),nb="\n    query GetPages($productId: ID!) {\n  getPages(productId: $productId) {\n    ...PageInListFragment\n  }\n}\n    ".concat(I),n$=(n,e,t,r)=>(0,u.I)({queryKey:["GetPages",e],queryFn:i(n,nb,e,r),...t}),nS="\n    query GetPublishedPage($getPublishedProductId: ID!, $getPublishedPageId: ID!) {\n  getPublishedPage(productId: $getPublishedProductId, id: $getPublishedPageId) {\n    ...PageFragment\n    isPurchased\n  }\n}\n    ".concat(F),nq=(n,e,t,r)=>(0,u.I)({queryKey:["GetPublishedPage",e],queryFn:i(n,nS,e,r),...t}),nU="\n    query GetPublishedPages($productId: ID!) {\n  getPublishedPages(productId: $productId) {\n    ...PageInListFragment\n  }\n}\n    ".concat(I),nA=(n,e,t,r)=>(0,u.I)({queryKey:["GetPublishedPages",e],queryFn:i(n,nU,e,r),...t}),nG=(n,e,t)=>(0,r.n)({mutationKey:["PublishPage"],mutationFn:e=>i(n,"\n    mutation PublishPage($id: ID!) {\n  publishPage(id: $id)\n}\n    ",e,t)(),...e}),nC=(n,e,t)=>(0,r.n)({mutationKey:["ReadPage"],mutationFn:e=>i(n,"\n    mutation ReadPage($id: ID!) {\n  completePage(id: $id) {\n    pageCompleted\n    courseCompleted\n  }\n}\n    ",e,t)(),...e}),nv=(n,e,t)=>(0,r.n)({mutationKey:["SchedulePagePublish"],mutationFn:e=>i(n,"\n    mutation SchedulePagePublish($input: schedulePagePublishInput!) {\n  schedulePagePublish(input: $input)\n}\n    ",e,t)(),...e}),nK=(n,e,t)=>(0,r.n)({mutationKey:["UnpublishPage"],mutationFn:e=>i(n,"\n    mutation UnpublishPage($unpublishPageId: ID!) {\n  unpublishPage(id: $unpublishPageId)\n}\n    ",e,t)(),...e}),nf="\n    mutation UpdatePage($input: updatePageInput!) {\n  updatePage(input: $input) {\n    ...PageFragment\n  }\n}\n    ".concat(F),nT=(n,e,t)=>(0,r.n)({mutationKey:["UpdatePage"],mutationFn:e=>i(n,nf,e,t)(),...e}),nD="\n    mutation UpdatePageStructure($input: updatePageStructureInput!) {\n  updatePageStructure(input: $input) {\n    ...PageInListFragment\n  }\n}\n    ".concat(I),nL=(n,e,t)=>(0,r.n)({mutationKey:["UpdatePageStructure"],mutationFn:e=>i(n,nD,e,t)(),...e}),nE=(n,e,t)=>(0,r.n)({mutationKey:["ArchiveProduct"],mutationFn:e=>i(n,"\n    mutation ArchiveProduct($archiveProductId: ID!) {\n  archiveProduct(id: $archiveProductId)\n}\n    ",e,t)(),...e}),nw=(n,e,t)=>(0,r.n)({mutationKey:["CancelScheduledProductPublish"],mutationFn:e=>i(n,"\n    mutation CancelScheduledProductPublish($cancelScheduledProductPublishId: ID!) {\n  cancelScheduledProductPublish(id: $cancelScheduledProductPublishId)\n}\n    ",e,t)(),...e}),nN="\n    mutation CreateProduct($input: createProductInput!) {\n  createProduct(input: $input) {\n    ...ProductFragment\n  }\n}\n    ".concat($),nk=(n,e,t)=>(0,r.n)({mutationKey:["CreateProduct"],mutationFn:e=>i(n,nN,e,t)(),...e}),nW=(n,e,t)=>(0,r.n)({mutationKey:["CreateProductGenerationRequest"],mutationFn:e=>i(n,"\n    mutation CreateProductGenerationRequest($fileUrl: String!) {\n  createProductGenerationRequest(fileUrl: $fileUrl)\n}\n    ",e,t)(),...e}),nO="\n    mutation DuplicateProduct($input: duplicateProductInput!) {\n  duplicateProduct(input: $input) {\n    ...ProductFragment\n  }\n}\n    ".concat($),nR=(n,e,t)=>(0,r.n)({mutationKey:["DuplicateProduct"],mutationFn:e=>i(n,nO,e,t)(),...e}),nz="\n    query GetProduct($getProductId: ID!) {\n  getProduct(id: $getProductId) {\n    ...ProductFragment\n  }\n}\n    ".concat($),nV=(n,e,t,r)=>(0,u.I)({queryKey:["GetProduct",e],queryFn:i(n,nz,e,r),...t}),n_="\n    query GetProducts($username: String!, $filter: getProductsFilter) {\n  getProducts(username: $username, filter: $filter) {\n    ...ProductFragment\n  }\n}\n    ".concat($),nx=(n,e,t,r)=>(0,u.I)({queryKey:["GetProducts",e],queryFn:i(n,n_,e,r),...t}),nM="\n    query GetPublishedProduct($getPublishedProductId: ID!) {\n  getPublishedProduct(id: $getPublishedProductId) {\n    ...ProductFragment\n  }\n}\n    ".concat($),nB=(n,e,t,r)=>(0,u.I)({queryKey:["GetPublishedProduct",e],queryFn:i(n,nM,e,r),...t}),nH="\n    query GetPublishedProducts($username: String!, $filter: getPublishedProductsFilter) {\n  getPublishedProducts(username: $username, filter: $filter) {\n    ...ProductFragment\n  }\n}\n    ".concat($),nY=(n,e,t,r)=>(0,u.I)({queryKey:["GetPublishedProducts",e],queryFn:i(n,nH,e,r),...t}),nZ=(n,e,t,r)=>(0,u.I)({queryKey:void 0===e?["ProductGenerationRequested"]:["ProductGenerationRequested",e],queryFn:i(n,"\n    query ProductGenerationRequested {\n  productGenerationRequested\n}\n    ",e,r),...t}),nj=(n,e,t)=>(0,r.n)({mutationKey:["PublishProduct"],mutationFn:e=>i(n,"\n    mutation PublishProduct($input: publishProductInput!) {\n  publishProduct(input: $input)\n}\n    ",e,t)(),...e}),nJ="\n    query GetPurchasedProducts {\n  getPurchasedProducts {\n    id\n    amountInCents\n    amountCurrency\n    purchasedAt\n    product {\n      ...ProductFragment\n    }\n    tier {\n      ...TierFragment\n    }\n  }\n}\n    ".concat($,"\n").concat(S),nQ=(n,e,t,r)=>(0,u.I)({queryKey:void 0===e?["GetPurchasedProducts"]:["GetPurchasedProducts",e],queryFn:i(n,nJ,e,r),...t}),nX=(n,e,t)=>(0,r.n)({mutationKey:["ScheduleProductPublish"],mutationFn:e=>i(n,"\n    mutation ScheduleProductPublish($input: scheduleProductPublishInput!) {\n  scheduleProductPublish(input: $input)\n}\n    ",e,t)(),...e}),n0=(n,e,t)=>(0,r.n)({mutationKey:["UnpublishProduct"],mutationFn:e=>i(n,"\n    mutation UnpublishProduct($unpublishProductId: ID!) {\n  unpublishProduct(id: $unpublishProductId)\n}\n    ",e,t)(),...e}),n1="\n    mutation UpdateProduct($input: updateProductInput!) {\n  updateProduct(input: $input) {\n    ...ProductFragment\n  }\n}\n    ".concat($),n5=(n,e,t)=>(0,r.n)({mutationKey:["UpdateProduct"],mutationFn:e=>i(n,n1,e,t)(),...e}),n7="\n    query GetProductFolders($userId: ID!) {\n  getProductFolders(userId: $userId) {\n    ...ProductFolderFragment\n  }\n}\n    ".concat(b),n9=(n,e,t,r)=>(0,u.I)({queryKey:["GetProductFolders",e],queryFn:i(n,n7,e,r),...t}),n6=(n,e,t,r)=>(0,u.I)({queryKey:void 0===e?["GetProductTemplates"]:["GetProductTemplates",e],queryFn:i(n,"\n    query GetProductTemplates {\n  getProductTemplates {\n    id\n    slug\n    url\n    title\n    description\n    pictureUrl\n    createdAt\n    updatedAt\n  }\n}\n    ",e,r),...t}),n4="\n    query GetPublishedTiers($productId: ID!, $promocode: ID) {\n  getPublishedTiers(productId: $productId, promocode: $promocode) {\n    ...TierFragment\n  }\n}\n    ".concat(S),n2=(n,e,t,r)=>(0,u.I)({queryKey:["GetPublishedTiers",e],queryFn:i(n,n4,e,r),...t}),n3="\n    query GetTiers($productId: ID!, $promocode: ID) {\n  getTiers(productId: $productId, promocode: $promocode) {\n    ...TierFragment\n  }\n}\n    ".concat(S),n8=(n,e,t,r)=>(0,u.I)({queryKey:["GetTiers",e],queryFn:i(n,n3,e,r),...t}),en="\n    mutation UpdateTiers($input: updateTiersInput!) {\n  updateTiers(input: $input) {\n    ...TierFragment\n  }\n}\n    ".concat(S),ee=(n,e,t)=>(0,r.n)({mutationKey:["UpdateTiers"],mutationFn:e=>i(n,en,e,t)(),...e}),et=(n,e,t)=>(0,r.n)({mutationKey:["AcceptInvite"],mutationFn:e=>i(n,"\n    mutation AcceptInvite($inviteCode: String!) {\n  acceptInvite(inviteCode: $inviteCode)\n}\n    ",e,t)(),...e}),er="\n    subscription GettingStartedUpdated($userId: ID!) {\n  gettingStartedUpdated(userId: $userId) {\n    ...GettingStartedFragment\n  }\n}\n    ".concat(m),eu=(n,e,t)=>(0,r.n)({mutationKey:["UploadNewVideo"],mutationFn:e=>i(n,"\n    mutation UploadNewVideo($input: uploadNewVideoInput!) {\n  uploadNewVideo(input: $input) {\n    headers\n  }\n}\n    ",e,t)(),...e})}}]);
//# sourceMappingURL=5100-03d44158efefa3d7.js.map